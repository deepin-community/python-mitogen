Source: python-mitogen
Section: python
Priority: optional
Maintainer: Debian Python Team <team+python@tracker.debian.org>
Uploaders:
 Antoine Beaupré <anarcat@debian.org>,
 Emmanuel Arias <emmanuelarias30@gmail.com>,
 Richard Laager <rlaager@debian.org>,
 Stefano Rivera <stefanor@debian.org>
Build-Depends:
 debhelper-compat (= 13),
 dh-python,
 python3-all,
 python3-mock <!nocheck>,
 python3-psutil <!nocheck>,
 python3-setuptools
Standards-Version: 4.6.2
Homepage: https://github.com/mitogen-hq/mitogen/
Vcs-Browser: https://salsa.debian.org/python-team/packages/python-mitogen
Vcs-Git: https://salsa.debian.org/python-team/packages/python-mitogen.git
Rules-Requires-Root: no
Testsuite: autopkgtest-pkg-python

Package: python3-mitogen
Architecture: all
Depends: ${misc:Depends}, ${python3:Depends}
Recommends: ${python3:Recommends}
Suggests: ${python3:Suggests}
Description: Library for writing distributed self-replicating programs
 Mitogen is a Python library for writing distributed self-replicating programs.
 .
 There is no requirement for installing packages, copying files around, writing
 shell snippets, upfront configuration, or providing any secondary link to a
 remote machine aside from an SSH connection. Due to its origins for use in
 managing potentially damaged infrastructure, the remote machine need not even
 have free disk space or a writeable filesystem.

Package: ansible-mitogen
Architecture: all
Depends:
# ansible alternatives are to ease backports to bullseye and earlier, before the split
 ansible-core (<< 2.15) | ansible (<< 8),
 ansible-core (>= 2.10) | ansible (>= 2.10),
 python3-mitogen (= ${source:Version}),
 ${misc:Depends},
 ${python3:Depends}
Recommends: ${python3:Recommends}
Suggests: ${python3:Suggests}
Description: Fast connection strategy for Ansible
 Mitogen for Ansible is a completely redesigned UNIX connection layer and
 module runtime for Ansible. Requiring minimal configuration changes, it
 updates Ansible’s slow and wasteful shell-centric implementation with
 pure-Python equivalents, invoked via highly efficient remote procedure calls
 to persistent interpreters tunnelled over SSH. No changes are required to
 target hosts.
